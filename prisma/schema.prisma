datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["referentialActions"] // You won't need this in Prisma 3.X or higher.
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String     @id @default(cuid())
  name             String?
  email            String?    @unique
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  sessions         Session[]
  donations        Donation[]
  total_donated    Int        @default(0)
  createdCharities Charity[]  @relation("creator")
  likedCharities   Charity[]  @relation("likedBy")
  donatedCharities Charity[]  @relation("donatedBy")
}

model Charity {
  createdAt      DateTime   @default(now()) @map("created_at")
  updatedAt      DateTime   @updatedAt @map("updated_at")
  id             String     @id @default(cuid())
  name           String
  description    String
  image          String?
  donations      Donation[]
  creator        User       @relation(name: "creator", fields: [creatorId], references: [id])
  creatorId      String
  likedBy        User[]     @relation(name: "likedBy")
  donatedBy      User[]     @relation(name: "donatedBy")
  totalDonations Float        @default(0)
}

model Donation {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  amount    Float
  charity   Charity  @relation(fields: [charityId], references: [id])
  charityId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  anonymous Boolean
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
